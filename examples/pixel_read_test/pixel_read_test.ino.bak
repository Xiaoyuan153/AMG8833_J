#include <AMG8833.h>
AMG8833 amg;
void setup(){
  Serial.begin(9600);
  Wire.begin();
  Serial.print("Connecting");
  while(amg.begin()!=1){}
  Serial.println();
  Serial.println("AMG8833 device setup successfully!");
  delay(2000);
}
void loop(){
  Serial.print("Temperature:");
  //Serial.println(amg.readThermistor());
  amg.readAllPixels();
  print_double_matrix(AMG8833_PIXEL_ARRAY_SIZE,amg.realRect);
  
  //delay(500);
}

void print_double_matrix(uint16_t size,double *_matrix){
    for (int i = 1; i <= size; i++)
	{
		Serial.print(_matrix[i - 1]);
		Serial.print(", ");
		if (i % 8 == 0) Serial.println();
	}
}
// #include <Wire.h>

// #define DEVICE_ADDR 0x69

// // Frame Rate control register values
// #define AMG_FPSC_FRAMERATE_10 	0x00	// 10 FPS measurement
// #define AMG_FPSC_FRAMERATE_1 	0x01	// 1 FPS Measurement
// #define RECT_ADDR 0x80
// //#define 
// #define RECT_SIZE 64

// unsigned int rawRect[RECT_SIZE];
// double realRect[RECT_SIZE];

// void setup() 
// {
// 	Serial.begin(115200);

// 	Wire.begin();

// 	delay(1000);

// 	setProperty(0x00, 0x00);
// 	setProperty(0x01, 0x3F);
// 	setProperty(0x02, 0x00);
// 	setProperty(0x03, 0x00);
// 	memset(rawRect, 8, sizeof(unsigned int) * RECT_SIZE);
// 	memset(realRect, 8, sizeof(double) * RECT_SIZE);
//   uint8_t Low = 0b10111111;
//   uint8_t High= 0b11111111;
//   uint16_t t =  uint16_t(High << 8) | Low;
// 	delay(2000);
// }

// void loop()
// {
// 	readRawRect(rawRect);
// 	convertRect(rawRect, realRect);

// 	for (int i = 1; i <= RECT_SIZE; i++)
// 	{
// 		Serial.print(realRect[i - 1]);
// 		Serial.print(", ");
// 		if (i % 8 == 0) Serial.println();
// 	}
// 	Serial.println(t);

// 	delay(1000);
// }

// //因为我想要设置的都是寄存器的第1个bit 就简单一写了
// void setProperty(int reg, int set)
// {
// 	Wire.beginTransmission(DEVICE_ADDR);
// 	Wire.write((unsigned int)reg);
// 	Wire.write((unsigned int)set);
// 	Wire.endTransmission();
// }

// void readRawRect(unsigned int* buf)
// {
// 	//从 0x80 到 0xFF 一共128bytes 每两个bit为一组 先低八位后高八位
//   unsigned int high8 = 0;
//   unsigned int low8 = 0;
// 	for (int i = 0; i < 128; i += 2)
// 	{
// 		//读低八位 8bit
// 		Wire.beginTransmission(DEVICE_ADDR);
// 		Wire.write((unsigned int)0x80 + (unsigned int)i);
// 		Wire.endTransmission();
// 		Wire.requestFrom(DEVICE_ADDR, 1);
// 		while (Wire.available() == 0) {}
// 		low8 = Wire.read();

// 		//读高八位 8bit
// 		Wire.beginTransmission(DEVICE_ADDR);
// 		Wire.write((unsigned int)0x80 + (unsigned int)(i + 1));
// 		Wire.endTransmission();
// 		Wire.requestFrom(DEVICE_ADDR, 1);
// 		while (Wire.available() == 0) {}
//     high8 = Wire.read();
// 		buf[i / 2] = ((high8 << 8) | (low8));
// 	}

// }

// void convertRect(unsigned int* raw, double* converted)
// {
// 	for (int i = 0; i < RECT_SIZE; i++)
// 	{
// 		if (raw[i] >= 2048 && raw[i] <= 4095)
// 			converted[i] = 0 - ((4096 - raw[i]) * 0.25);
// 		//                1 0000 0000 - raw = 比0少了多少
// 		else
// 			converted[i] = raw[i] * 0.25;
// 	}
// }